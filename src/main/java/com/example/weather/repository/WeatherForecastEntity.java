package com.example.weather.repository;import com.example.weather.dto.BaseDTO;import lombok.Builder;import lombok.Getter;import lombok.Setter;import org.modelmapper.ModelMapper;import javax.persistence.*;import java.util.ArrayList;import java.util.List;@Entity@Table(name = "weatherforcast")@Getter@Setterpublic class WeatherForecastEntity extends BaseEntity {    @Column(name = "ref_Id")    public void setRefId(Long refId) {        super.setRefId(refId);    }    @OneToOne(cascade = {CascadeType.ALL})    @JoinColumn(name = "refId")    private CoordEntity coord;    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, orphanRemoval = true)    @JoinColumn(name = "weather_id")    private List<WeatherEntity> weather = new ArrayList<>();    @Column    private String base;    @OneToOne(cascade = {CascadeType.ALL})    @JoinColumn(name = "refId")    private MainEntity main;    @Column    private int visibility;    @OneToOne(cascade = {CascadeType.ALL})    @JoinColumn(name = "refId")    private WindEntity wind;    @OneToOne(cascade = {CascadeType.ALL})    @JoinColumn(name = "refId")    private CloudsEntity clouds;    @Column    private int dt;    @OneToOne(cascade = {CascadeType.ALL})    @JoinColumn(name = "refId")    private SysEntity sys;    @Column    private int timezone;    @Column(name = "response_id", unique = true)    private String responseId;    @Column    private String name;    @Column    private int cod;}