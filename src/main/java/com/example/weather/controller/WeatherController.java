package com.example.weather.controller;import com.example.weather.model.WeatherRequest;import com.example.weather.model.WeatherResponse;import com.example.weather.service.ApiUsageService;import com.example.weather.service.internal.WeatherInternalService;import lombok.RequiredArgsConstructor;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import javax.validation.Valid;import static org.apache.logging.log4j.util.Strings.isBlank;@RestController@RequestMapping@RequiredArgsConstructorpublic class WeatherController {    final static String DEFAULT_API_KEY = "b1-000";    private final WeatherInternalService weatherInternalService;    private final ApiUsageService apiUsageService;    @PostMapping(value = {"/live/data/", "/live/data/{apiKey}"})    public ResponseEntity<WeatherResponse> fetchLiveData(@PathVariable(required = false) final String apiKey, @Valid @RequestBody WeatherRequest weatherRequest) {        // Check rate limit [If no apiKey passed, the default one will be used]        apiUsageService.checkRateLimit(isBlank(apiKey) ? DEFAULT_API_KEY : apiKey);        WeatherResponse weatherResponse = weatherInternalService.getLiveData(weatherRequest);        return ResponseEntity.ok(weatherResponse);    }}