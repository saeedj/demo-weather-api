package com.example.weather.service.external;import com.example.weather.dto.BaseDTO;import com.example.weather.dto.ExternalAPIErrorResponseDto;import com.example.weather.exception.DownstreamException;import com.example.weather.model.BaseModel;import org.springframework.web.reactive.function.client.ClientResponse;import reactor.core.publisher.Mono;public interface BaseExternalService<T extends BaseDTO, B extends BaseModel> {    T getFromExternalAPI(B b) throws DownstreamException;    static Mono<? extends Throwable> handleErrors(ClientResponse response) {        return response.bodyToMono(ExternalAPIErrorResponseDto.class).flatMap(error -> Mono.error(new DownstreamException(error.getMessage(), response.statusCode())));    }}