package com.example.weather.service;import io.github.bucket4j.Bandwidth;import io.github.bucket4j.Refill;import org.apache.commons.lang3.StringUtils;import java.time.Duration;/** * An enum to keep API capacity (Max number of calls) per duration of minutes */public enum ApiUsagePlan {    PLAN_FREE(1, 60),    PLAN_BASIC_ONE(5, 60),    PLAN_BASIC_TWO(10, 90),    PLAN_PRO_ONE(100, 60),    PLAN_PRO_TWO(200, 90);    private int bucketCapacity;    private int duration;    ApiUsagePlan(int bucketCapacity, int duration) {        this.bucketCapacity = bucketCapacity;        this.duration = duration;    }    public int bucketCapacity() {        return bucketCapacity;    }    public int duration() {        return duration;    }    public Bandwidth getLimit() {        return Bandwidth.classic(bucketCapacity, Refill.intervally(bucketCapacity, Duration.ofMinutes(duration)));    }    public static ApiUsagePlan resolvePlanFromApiKey(String apiKey) {        if (StringUtils.isBlank(apiKey)) {            return PLAN_FREE;        } else if (apiKey.toLowerCase().startsWith("b1-")) {            return PLAN_BASIC_ONE;        } else if (apiKey.toLowerCase().startsWith("b2-")) {            return PLAN_BASIC_TWO;        } else if (apiKey.toLowerCase().startsWith("p1-")) {            return PLAN_PRO_ONE;        } else if (apiKey.toLowerCase().startsWith("p2-")) {            return PLAN_PRO_TWO;        } else {            return PLAN_FREE;        }    }}